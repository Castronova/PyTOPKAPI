import os
import subprocess

# BEFORE importing distutils, remove MANIFEST. distutils doesn't
# properly update it when the contents of directories change.
if os.path.exists('MANIFEST'): os.remove('MANIFEST')

from distutils.core import setup

MAJOR               = 0
MINOR               = 2
MICRO               = 0
ISRELEASED          = False
VERSION             = '%d.%d.%d' % (MAJOR, MINOR, MICRO)

def generate_version_py(filename):
    FULL_VERSION = VERSION
    if not ISRELEASED:
        FULL_VERSION += '.dev'

    try:
        if os.path.exists(".git"):
            s = subprocess.Popen(["git", "rev-parse", "HEAD"],
                    stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
            out = s.communicate()[0]
            GIT_REVISION = out.strip()
        else:
            GIT_REVISION = ""
    except:
        GIT_REVISION = "Unknown"

    FULL_VERSION += GIT_REVISION[:6]

    cnt = """\
# This file was autogenerated
version = '%s'
git_revision = '%s'
"""
    cnt = cnt % (FULL_VERSION, GIT_REVISION)

    f = open(filename, "w")
    try:
        f.write(cnt)
    finally:
        f.close()

    return FULL_VERSION, GIT_REVISION

if __name__ == '__main__':
    full_version, git_rev = generate_version_py('lib/__dev_version.py')

    setup(name='TOPKAPI',
          version=full_version,
          description='SAHG TOPKAPI model implementation',
          license='BSD',
          author='Theo Vischel & Scott Sinclair',
          author_email='theo.vischel@hmg.inpg.fr; sinclaird@ukzn.ac.za',
          packages=['TOPKAPI',
                    'TOPKAPI.parameter_utils',
                    'TOPKAPI.results_analysis'],
          package_dir={'TOPKAPI':'lib'}
          )

